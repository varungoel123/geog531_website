{
  "hash": "51f32f932d5d47540322c55efb9ef80c",
  "result": {
    "markdown": "---\ntitle: 'Geocode, Table Join, and Spatial Join'\nauthor:\n- In Class Exercise \\#3 \\newline\n- GEOG 510, GIS & Spatial Analysis in Public Health \\newline\n- Varun Goel\noutput:\n  html_document:\n    theme: flatly\n    highlight: tango\n    mathjax: null\n---\n\n::: {.cell}\n<style type=\"text/css\">\na {\n  color: royalblue;\n}\n\na:hover {\n  color: darkorange;\n}\n\ndiv.highlightblock { \n background-color: #e0f0ff; \n padding: 10px 10px 3px 10px;\n}\n</style>\n:::\n\n\n\n\n------------------------------------------------------------------------\n\nIn this exercise, you will use QGIS to geocode a set of points, then will use a table join and spatial join to append information to those points. Go to the associated Quiz in Canvas and answer questions as you go along!\n\n**Note that throughout this document, if I use the term \"right click,\" this means \"control click\" for Mac users!**\n\n------------------------------------------------------------------------\n\n### Download Data\n\n1. Download [GEOG510_ex3_data.zip here](https://drive.google.com/file/d/1IrJ35gUtVOJ6o3FaEvWeBBRSk_RJI-KP/view?usp=share_link){target=\"_blank\"} and save to your GEOG 510 folder. Unzip the file.\n\n### Add Data Layers\n\n2.  Open QGIS. In the top menu, select Project \\| New.\n\n3.  Add NC_counties.gpkg, NC_Psych_Hosps_Beds.csv, and NC_Psych_Hosps.csv to the Layers panel (you can do this by dragging from the Browser panel or clicking the Open Data Source Manager button).\n\n### Geocode\n\n4.  Use the instructions provided in the QGIS Plugins and Geocoding In Class Demonstration (#3) to install and activate the MMQGIS plugin.\n\n5.  In the top menu, navigate to MMQGIS \\| Geocode \\| Geocode CSV with Web Service. Choose NC_Psych_Hosps.csv as the input. QGIS attemps to find the correct fields for Address, City, and State (verify this worked). For Web Service, choose OpenStreetMap / Nominatim. For Output File Name, click the little button with three dots and Save As NC_Psych_Hosps_osm_geocoded.gpkg. For Not Found Output List, Save As NC_Psych_Hosps_osm_geocoded_notfound.csv. Click Apply. **The process will likely take a couple of minutes to complete (just hold tight until you see the results appear in the Layers panel).** \n\n6. Create a new MS word file and type in answers to your exercise questionsa there. \n\n**Q1: How many of the results were geocoded successfully? How many were not?**\n\n### Table Join\n\nNote that NC_Psych_Hosps_osm_geocoded.gpkg only has location information. This isn't super useful as/is. However, we do have the number of beds at each facility stored in a .csv file, which we can append to the geocoded locations using a table join.\n\n6.  Right click on NC_Psych_Hosps_osm_geocoded and choose Properties. In the menu on the left, choose Joins. Click on the little green \"plus\" button at the bottom. For Join Layer, choose NC_Psych_Hosps_Beds. The **key fields** are the Join field and the Target field. Choose the correct fields for the join (ID and ID). Leave everything else unchanged and click OK.\n\n7.  Open the attribute table of NC_Psych_Hosps_osm_geocoded and note the appended information!\n\n### Field Calculator\n\n8.  Right click on NC_Psych_Hosps_osm_geocoded and choose Properties. In the menu on the left, choose Fields. \n\n**Q2: What 'Type' is the \"NC_Psych_Hosps_Beds_PSYCHBEDS\" field stored as? Is this a nominal, ordinal, or an integer/ratio variable? If we were to calculate the average number of beds in NC hospitals using this field, would we able to do that or not? Why or why not?**\n\nQGIS does not do a great job reading in data types in .csv files. Thus, the psychiatric bed information that was appended to the spatial features using the table join is not quite usable yet (beds are stored as character data)! In the next step, you will create a new numeric field in the NC_Psych_Hosps_osm_geocoded layer to store this information.Click the Field Calculator button (at the top, with colored dots on it).\n\n9.  In the Field Calculator window, make sure Create a new field is selected. In Output field name, put BEDS. In the Output field type, choose Whole number (integer 32 bit is ok). In the Expression area type or copy/paste: `\"NC_Psych_Hosps_Beds_PSYCHBEDS\"` (or find this in Fields and Values and double click the correct field). Click OK.\n\n10. Open the attribute table of NC_Psych_Hosps_osm_geocoded and note the appended information!\n\n------------------------------------------------------------------------\n\n### Spatial Join\n\n**Q3: By looking at the attribute table of NC_Psych_Hosps_osm_geocoded, can we determine the county that each facility is located in? Why would we need to use a spatial join here as compared to tabular join? **\n\n\n11. In the top menu, navigate to Vector \\| Data Management Tools \\| Join Attributes by Location. The \"Join to features in\" layer is the layer that will be \"receiving\" the information. The \"By comparing to\" layer is the layer providing the information. In this case, the \"Join to features in\" layer should be NC_Psych_Hosps_osm_geocoded and the \"By comparing to\" layer should be NC_counties. For Features they (geometric predicate), intersect should be selected (this will assign information to each point from each polygon). In this case, you can simply create a temporary layer. Leave everything else as it is and Click Run.\n\n**Q4: How many columns does the new joined layer has? (Note: you can take a look by right clicking the layer -> Properties -> Information and looking at the Fields metadata)**\n\n**Q5: Which county has the hospital with the highest number of beds?)**\n\n12. Note that while we used the default QGIS tools for creating a new field and conducting joins, you can also the MMQGIS package which is even more intuitive. Give it a try at some point.\n\n13. Save your word file as 'username_ex3.docx' and save to your respective folder.\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}